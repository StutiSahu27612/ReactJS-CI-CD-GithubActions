name:  CI

# on:
#   push:
#     branches:
#       - main
      
#   pull_request:
#     branches:
#       - main
on:
  workflow_dispatch:
permissions:
  contents: read
  id-token: write
  issues: write # Grant permissions to create issues
     

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16 # Ensure this matches your Node.js version

        
    # - name: Run Trivy vulnerability scanner in repo mode
    #   uses: aquasecurity/trivy-action@0.20.0
    #   with:
    #     scan-type: 'fs'
    #     ignore-unfixed: true
    #     format: table
    
    #     severity: 'CRITICAL'

    - name: Install dependencies
      run: npm install

    # Step 4: Run tests
    - name: Run tests
      run: npm test

    - name : Run Coverage
      run: npm run coverage  
        

    # - name : SonarQube scan   
    #   uses: sonarsource/sonarqube-scan-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2.0.0  
      with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          
    - name: Check Active Service Account
      run:  | 
        gcloud config get-value account

    # Step 2: Authenticate Docker to use Google Artifact Registry
    - name: Configure Docker for GCR
      run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
 
    # Step 3: Build Docker image
    - name: Build Docker image
      run: |
          docker build -t us-central1-docker.pkg.dev/refined-helix-428205-q4/reactjs-app-repo/reactjs-app-image:${{github.sha}} .

    # Step 4: Push Docker image
    - name: Push Docker image
      run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker push us-central1-docker.pkg.dev/refined-helix-428205-q4/reactjs-app-repo/reactjs-app-image:${{github.sha}}
      
    # - name: Deploy to Cloud Run
    #   run: |
    #     gcloud run deploy my-service \
    #       --image us-central1-docker.pkg.dev/refined-helix-428205-q4/reactjs-app-repo/reactjs-app-image:latest \
    #       --platform managed \
    #       --region us-central1 \
    #       --allow-unauthenticated \
    #       --set-env-vars PORT=80 \
    #       --port=80


    # - name: Deploy to Cloud Run
    #   id: deploy
    #   uses: google-github-actions/deploy-cloudrun@v1
    #   with:
    #    service: service-react
    #    region:  us-central1
    #       # NOTE: If using a pre-built image, update the image name here
    #    image: us-central1-docker.pkg.dev/refined-helix-428205-q4/reactjs-app-repo/reactjs-app-image:latest
  

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: githubaction-cicd-service-reactjs
        region: us-central1
        image: us-central1-docker.pkg.dev/refined-helix-428205-q4/reactjs-app-repo/reactjs-app-image:${{github.sha}}
        flags: "--allow-unauthenticated"

