
name:  CI

on:
  push:
    branches:
      - main
      
  pull_request:
    branches:
      - main
     

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16 # Ensure this matches your Node.js version

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install

    # Step 4: Run tests
    - name: Run tests
      run: npm test

    - name : Run Coverage
      run: npm run coverage  

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: table
    
        severity: 'CRITICAL'
  


    - name: SonarQube
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        
    - name : SonarQube scan   
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      with:
        args: >
          -Dsonar.projectKey=your_project_key
          -Dsonar.sources=.
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 
